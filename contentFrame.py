#coding=utf-8import wximport osimport datetimefrom dw import WebProdManagerfrom dw import FileManagerclass ContentFrame(wx.Frame):    def __init__(self, parent=None, id=-1, UpdateUI=None, db_path=None, user_dic={}):        wx.Frame.__init__(self, parent, -1, title=u'CIS', size=(500, 300), pos=(500, 200))        self.themeColor = '#0a74f7'        self.UpdateUI = UpdateUI        self.db_path = db_path;        self.user = user_dic if None != user_dic else {};        self.user['login_time'] = datetime.datetime.now();        self.saveFilePath = '';        self.openFilePath = '';        self.column_id_excel_batch_num = 0;	self.excel_template_id = 0;        self.InitUI() #绘制UI        self.set_btn_enable(True)    def InitUI(self):        panel = wx.Panel(self)        font = wx.Font(14, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, True)        accountLabel = wx.StaticText(panel, -1, u'打开文件', pos=(10, 30))        #accountLabel.SetForegroundColour(self.themeColor)        accountLabel.SetFont(font)        self.inputLable = wx.TextCtrl(panel, -1, u'', pos=(90, 30), size=(300, 30))        self.inputLable.SetForegroundColour('gray')        self.inputLable.SetFont(font)                self.openFileButton = wx.Button(panel, -1, u'...', pos=(400, 30), size=(50, 30))        self.openFileButton.SetForegroundColour('white')        self.openFileButton.SetBackgroundColour(self.themeColor)        # 为【确定Button】绑定事件        self.Bind(wx.EVT_BUTTON, self.onOpenFileBtn, self.openFileButton)        sampleList = ['1', '2', '3', '4', '5', '6','7', '8', '9']        self.column_choice = wx.Choice(panel, 1, (100, 70), choices = sampleList)        self.Bind(wx.EVT_CHOICE, self.EvtChoice, self.column_choice)                columnLabel = wx.StaticText(panel, -1, u'批次所在列编号', pos=(160, 70))        #columnLabel.SetForegroundColour(self.themeColor)        columnLabel.SetFont(font)                    accountLabel = wx.StaticText(panel, -1, u'保存路径', pos=(10, 105))        #accountLabel.SetForegroundColour(self.themeColor)        accountLabel.SetFont(font)        self.outputLable = wx.TextCtrl(panel, -1, u'', pos=(90, 105), size=(300, 30))        self.outputLable.SetForegroundColour('gray')        self.outputLable.SetFont(font)                self.saveFileButton = wx.Button(panel, -1, u'...', pos=(400, 105), size=(50, 30))        self.saveFileButton.SetForegroundColour('white')        self.saveFileButton.SetBackgroundColour(self.themeColor)        # 为【确定Button】绑定事件        self.Bind(wx.EVT_BUTTON, self.onSaveFileBtn, self.saveFileButton)        self.templateList = [u'完整版', u'升贴水版']        self.template_choice = wx.Choice(panel, 1, (100, 150), choices = self.templateList)        self.Bind(wx.EVT_CHOICE, self.EvtChoicTemplate, self.template_choice)                templateLabel = wx.StaticText(panel, -1, u'生成文件的模板', pos=(200, 150))        #columnLabel.SetForegroundColour(self.themeColor)        templateLabel.SetFont(font)                                #accountLabel = wx.StaticText(panel, -1, u'批号', pos=(20, 55))        #accountLabel.SetForegroundColour(self.themeColor)        #accountLabel.SetFont(font)        #self.accountInput = wx.TextCtrl(panel, -1, u'', pos=(80, 55), size=(180, -1))        #self.accountInput.SetForegroundColour('gray')        #self.accountInput.SetFont(font)        self.sureButton = wx.Button(panel, -1, u'执行', pos=(40, 200), size=(120, 40))        self.sureButton.SetForegroundColour('white')        self.sureButton.SetBackgroundColour(self.themeColor)        # 为【确定Button】绑定事件        self.Bind(wx.EVT_BUTTON, self.sureEvent, self.sureButton)        self.resetButton = wx.Button(panel, -1, u'重置', pos=(180, 200), size=(120, 40))        self.resetButton.SetForegroundColour('white')        self.resetButton.SetBackgroundColour(self.themeColor)        # 为【确定Button】绑定事件        self.Bind(wx.EVT_BUTTON, self.onResetBtn, self.resetButton)        self.calcelButton = wx.Button(panel, -1, u'中止', pos=(320, 200), size=(120, 40))        self.calcelButton.SetForegroundColour('white')        self.calcelButton.SetBackgroundColour(self.themeColor)        # 为【确定Button】绑定事件        self.Bind(wx.EVT_BUTTON, self.onResetBtn, self.calcelButton)        self.timer = wx.Timer(self)        self.Bind(wx.EVT_TIMER, self.OnTimer, self.timer)        self.timer.Start(1000*5*60,oneShot=False)            def EvtChoicTemplate(self,event):        for i in range(len(self.templateList)):            if self.templateList[i] == event.GetString():                self.excel_template_id = i;                return;                def EvtChoice(self, event):        self.column_id_excel_batch_num =  int(event.GetString())-1;        if self.column_id_excel_batch_num < 0:            dlg = wx.MessageDialog(self, u'EXCEL文件中批号所在的列选择错误，应该为正整数','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal()            dlg.Destroy()            def onResetBtn(self, event):        self.saveFilePath = '';        self.outputLable.SetValue(self.saveFilePath);        self.openFilePath = '';        self.inputLable.SetValue(self.openFilePath)        def onOpenFileBtn(self, event):        dlg = wx.FileDialog(self, message="Choose a file",defaultDir=os.getcwd(), defaultFile="",wildcard='*.xls*', style=wx.OPEN | wx.MULTIPLE | wx.CHANGE_DIR );        if dlg.ShowModal() == wx.ID_OK:            paths = dlg.GetPaths()            for path in paths:                #TODO                self.openFilePath = path;        self.inputLable.SetValue(self.openFilePath)        dlg.Destroy()            def OnTimer(self, event):        now = datetime.datetime.now();        d = (now - self.user['login_time']).seconds;        dura = [float('inf'), 365*24*60*60, 90*24*60*60, 30*24*60*60, 7*24*60*60, 24*60*60, 60*60]        ttl = self.user['ttl'] if 'ttl'in self.user and self.user['ttl'] < len(dura) else len(dura)-1;        if d > dura[ttl]:            dlg = wx.MessageDialog(self, u'试用时间到，请重新登录','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal();            dlg.Destroy();            self.Destroy();    def onSaveFileBtn(self, event):        dlg = wx.FileDialog(self, message="Save file as ...", defaultDir=os.getcwd(), defaultFile="", wildcard=' (*.xlsx)|*.xlsx|(*.xls)|*.xls', style=wx.SAVE)        dlg.SetFilterIndex(2)        if dlg.ShowModal() == wx.ID_OK:            self.saveFilePath = dlg.GetPath()        self.outputLable.SetValue(self.saveFilePath);        dlg.Destroy()                def sureEvent(self, event):        #batchNum = self.accountInput.GetValue()        #batchNumList = [batchNum];        self.set_btn_enable(False)                parser = WebProdManager(self.db_path)        fp = FileManager()        if len(self.openFilePath) <= 0:            dlg = wx.MessageDialog(self, u'输入文件路径不能为空','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal()            dlg.Destroy()            self.set_btn_enable(True)            return;        if len(self.saveFilePath) <= 0:            dlg = wx.MessageDialog(self, u'输出路径不能为空','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal()            dlg.Destroy()            self.set_btn_enable(True)            return;        if self.column_id_excel_batch_num < 0:            dlg = wx.MessageDialog(self, u'EXCEL文件中批号所在的列选择错误，应该为正整数','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal()            dlg.Destroy()                batchNumList = None;        detailList = None;                try:            batchNumList = fp.ReadBatchNumList(self.openFilePath, self.column_id_excel_batch_num);            if len(batchNumList) <= 0:                dlg = wx.MessageDialog(self, u'没有从文件中读出批号','A Message Box',wx.OK | wx.ICON_INFORMATION);                dlg.ShowModal()                dlg.Destroy()                self.set_btn_enable(True)                return;                        if len(batchNumList) >= 300:                dlg = wx.MessageDialog(self, u'棉花批次超过300，处理时间会很长，建议进行切分','A Message Box',wx.OK | wx.ICON_INFORMATION);                dlg.ShowModal()                dlg.Destroy()                self.set_btn_enable(True)                return;        except Exception,e:            print e            dlg = wx.MessageDialog(self, u'输入文件打开时发生异常','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal()            dlg.Destroy()            self.set_btn_enable(True)            return;        try:            ret = parser.GetWebData(batchNumList)        except Exception,e:            dlg = wx.MessageDialog(self, u'页面解析时发生异常','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal()            dlg.Destroy()            self.set_btn_enable(True)            #print e            return;        try:            fp.save(self.saveFilePath,ret,self.excel_template_id,batchNumList);        except Exception,e:            print e            dlg = wx.MessageDialog(self, u'保存文件时发生异常','A Message Box',wx.OK | wx.ICON_INFORMATION);            dlg.ShowModal()            dlg.Destroy()            self.set_btn_enable(True)            return;        dlg = wx.MessageDialog(self, u'执行完成','A Message Box',wx.OK | wx.ICON_INFORMATION);        dlg.ShowModal()        dlg.Destroy()        self.set_btn_enable(True)            def set_btn_enable(self, enable=True):        self.openFileButton.Enable(enable);        self.saveFileButton.Enable(enable);        self.sureButton.Enable(enable);        self.resetButton.Enable(enable);        self.calcelButton.Enable(not enable);        